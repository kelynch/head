en:
  colenda:
    static:
      homepage:
        blurb_html: "<p>Colenda is a system for long-term preservation and access to digital assets stewarded by %{institution_link}.  It is a project of the Libraries, developed using the Samvera software framework.  At this time, content accessible to the public in this application is in the %{public_domain_link} and is therefore available for public use, or where indicated, is of %{undetermined_copyright_link}.</p>"
        institution_link_href: 'http://www.library.upenn.edu'
        institution_link_text: 'Penn Libraries'
        public_domain_link_href: 'https://creativecommons.org/publicdomain/mark/1.0/'
        public_domain_link_text: 'public domain'
        undetermined_copyright_link_href: 'http://rightsstatements.org/page/UND/1.0/'
        undetermined_copyright_link_text: 'undetermined copyright'
        beta_html: '<div class="alert alert-warning"><p>This site is currently in beta and may be periodically unavailable as we make improvements to the service.</p></div>'
    controllers:
      repos:
        update:
          success: 'Repo updated successfully.'
          error: 'Repo was not updated successfully.'
        review_status:
          success: 'Review status note added.'
          suffix: ' -- %{email} || %{timestamp}'
      metadata_builders:
        update:
          success: 'Metadata Builder updated successfully.'
          error: 'Metadata Builder was not updated successfully.'
        ingest:
          error: 'Select at least one file to ingest.'
        file_checks:
          success: 'File checks being performed in the background.  You will receive an email when all file checks are complete.'
        set_source:
          success: 'Metadata sources set successfully.'
        clear_files:
          success: 'Unidentified files have been removed from the repository.'
    mailers:
      addresses:
        default: 'colenda@upenn.edu'
      notification:
        ingest:
          subject: 'Ingestion and Derivative Generation completed'
          body: '%{uuid} has been ingested and its derivatives generated.  It is ready for review.  Review at: %{root_url}admin_repo/repo/%{link_fragment}/ingest'
        file_checks:
          subject: 'File checks performed'
          body: 'File checks performed for %{uuid}.  Review the results at: %{root_url}admin_repo/repo/%{link_fragment}/ingest'
        generate_xml:
          subject: 'Preservation XML Generation completed'
          body: 'Preservation-level XML generated for %{uuid} has been generated and is ready for review.  Review at: %{root_url}admin_repo/repo/%{link_fragment}/preview_xml'
        metadata_extraction:
          subject: 'Metadata Extraction completed'
          body: 'Metadata extraction complete for %{uuid}.  Review at: %{root_url}admin_repo/repo/%{link_fragment}/generate_metadata'
        batch_created:
          subject: 'Batch ready for Fedora'
          body: 'Batch %{uuid} ready for Fedora, queue list: %{queue_list}.'
        batch_removed:
          subject: 'Batch removed from queue for Fedora'
          body: 'Batch %{uuid} removed from queue for Fedora, queue list: %{queue_list}.'
        batch_processed:
          subject: 'Batch processed into Fedora'
          body: 'Batch %{uuid} processed in Fedora.  See report for %{queue_list} - %{report_blob}'
    validators:
      xml_tags:
        starts_with_xml: 'Invalid tag "%{value}" specified for "%{key}" - valid XML tags cannot start with %{xml}'
        starts_with_number: 'Invalid tag "%{value}" specified for "%{key}" - valid XML tags cannot begin with numbers'
        invalid_characters: 'Invalid tag "%{value}" specified for "%{key}" - valid XML tags can only contain letters, numbers, underscores, hyphens, and periods'
    header_links:
      admin_dashboard: 'Admin Dashboard'
    rails_admin:
      new_repo:
        labels:
          human_readable_name: 'Name'
          directory: 'Directory'
        metadata_subdirectory:
          help: 'Required - subdirectory within the directory specified above that will serve as the location for the metadata to be processed by the application.'
        assets_subdirectory:
          help: 'Required - subdirectory within the directory specified above that will serve as the location for the assets to be processed by the application.'
        file_extensions:
          help: 'Required - comma-separated list of accepted file extensions for assets to be served to production from the assets subdirectory.  Example: jpeg,tif'
        metadata_source_extensions:
          help: 'Required - comma-separated list of accepted file extensions for metadata source files to be served from the metadata subdirectory.'
        preservation_filename:
          help: 'Required - Filename for long-term preservation XML file'
      dashboard_link_text: 'Admin Dashboard'
      links:
        front_end: 'Front End'
      processing_job_message: 'Processing your job in the background.  You will receive an email when it is complete.'
      jobs:
        queued: 'Your %{process} job for %{unique_identifier}, started on %{started}, is in the queue'
        processing: 'Your %{process} job for %{unique_identifier}, started on %{started}, is being processed in the background'
        complete: 'Your %{process} job for %{unique_identifier}, started on %{started}, is complete'
      labels:
        generate_xml:
          first_time: 'Generate XML'
          additional_times: 'Regenerate XML'
        source_select:
          first_time: 'Select metadata sources'
          additional_times: 'Update metadata source selections'
        metadata_mappings:
          first_time: 'Save metadata mappings'
          additional_times: 'Update metadata mappings'
        extract_metadata:
          first_time: 'Extract metadata from sources'
          additional_times: 'Refresh extracted metadata from sources'
        metadata_source_additional_info:
          first_time: 'Save additional information'
          additional_times: 'Update additional information'
        set_source_types:
          first_time: 'Save source types'
          additional_times: 'Update source types'
        files_checked: 'Check for missing or invalid files'
        queued_for_ingest:
          first_time: 'Approve and add to ingest queue'
          additional_times: 'Re-approve and re-add to ingest queue'
        publish_preview:
          first_time: 'Publish preview'
          additional_times: 'Re-publish preview'
    repos:
      create_remote_link_text: 'Create Remote'
      preservation_xml_link_text: 'Create Preservation XML'
      warnings:
        no_xml: 'No preservation XML has been generated for ingest yet.  To generate XML, go to the %{href} and click the "%{button_label}" button.'
      actions:
        heading: 'Additional Repo Actions'
        label: 'Repo Owner:'
        submit: 'Reassign Owner'
      ingest:
        select:
          heading: 'Select file for ingest into the repository'
        review:
          heading: 'Click below to review of ingested item:'
          link_text: '(Opens in a new tab) - %{href}'
          actions:
            heading: 'Admin Actions'
          status:
            heading: 'Review Status'
          queued:
            heading: 'Review for Ingestion'
            fieldset: 'Add to queue?'
            label: 'Add %{name} to ingest queue'
          in_queue:
            heading: 'Object Queued for Ingest'
            fieldset: '%{uuid} is queued but has not yet begun ingestion.  Remove from queue?'
            label: 'Remove %{name} from ingest queue'
            submit: 'Remove now'
          processing:
            heading: 'Object in batch to Fedora'
            message: 'You will receive an email when the batch is complete.'
          process_batch:
            heading: 'Sign Off on this Batch'
            label: 'The objects listed below are ready for processing in Fedora.  Once begun, this processing job must complete before new representations can be added to Fedora.'
            submit: 'Submit'
          problem_files:
            heading: 'File Issues Detected for %{human_readable_name}'
            li: 'Filename: %{filename} - %{problem}'
          metadata:
            preview:
              heading: '%{view_type} preview for %{selected_attributes}'
              not_available: 'N/A'
    metadata_builders:
      generate_metadata_link_text: 'Generate Metadata form'
      xml_preview_header: 'XML Sample for %{file}'
      warnings:
        no_qualified_metadata_files: 'The metadata directory (%{directory}) is empty.  Add some files, upload to the server, and refresh this page to designate metadata sources.'
        no_mappings: 'No metadata schema mappings have been generated yet.  To generate the metadata schema to use for creating this preservation XML, use the %{href}.'
      source_select:
        multiple_files: 'Hold down the Shift key to select multiple files.'
        fieldset_label: 'Select metadata source files from the following:'
        label: 'Select metadata sources:'
    metadata_sources:
      select_sources_link_text: 'Select some metadata sources'
      warnings:
        no_sources: 'No metadata sources have been selected yet for %{source}.  %{href} based on the available files to begin generating metadata for this item.'
        unknown_source_type: 'Unknown source type.'
      describe:
        source_type:
          fieldset_label: 'Describe metadata source types:'
          heading: 'What type of metadata source is %{source}?'
          label: 'Source Type'
          list:
            catalog_bibid: 'Catalog BibID Lookup Spreadsheet (XLSX)'
            structural_bibid: 'Structural Metadata from BibID Lookup Spreadsheet (XLSX)'
            bibliophilly: 'BiblioPhilly (XLSX)'
            kaplan: 'Kaplan (XLSX)'
            custom: 'Custom Structural Metadata Spreadsheet (XLSX)'
        orientation:
          vertical: 'Vertical'
          horizontal: 'Horizontal'
        xy:
          fieldset_label: 'Define the orientation of the field mappings for %{source}'
          start_label: 'Define the X & Y coordinates of the cell at which field mappings begin:'
          end_label: 'Define the X & Y coordinates of the cell at which field mappings end:'
        number:
          fieldset_label: 'If this metadata source describes a repeating entity, how many entities does it describe?'
          label: 'Number of entities described by this source (for example, pages in a book):'
      metadata_mapping:
        fieldset_label: 'Map source metadata to XML'
        instructions: 'Fill out the fields below to field values from metadata source files to XML.'
        mappings:
          heading: 'Mappings for %{file_name}'
        root_element:
          label: 'Root element:'
          tip: 'Root element of the XML schema generated -- defaults to "root" if left blank.'
        child_element:
          label: 'Child element of root, for multi-item spreadsheets (optional):'
          tip: 'For single spreadsheets that describe more than one item -- Parent of each row of values in metadata source spreadsheet; Child of the root element.'
        voyager:
          heading: 'Descriptive metadata fetched from Catalog Lookup'
          field_separator: ':'
        structural_bibid:
          heading: 'Sample of structural metadata fetched from Catalog Lookup'
          field_separator: ':'
        bibliophilly:
          heading: 'Sample metadata fetched from BiblioPhilly spreadsheet'
          field_separator: ':'
        bibliophilly_structural:
          heading: 'Sample structural metadata fetched from Page 2 of BiblioPhilly spreadsheet'
          field_separator: ':'
        kaplan:
          heading: 'Sample metadata fetched from Kaplan spreadsheet'
          field_separator: ':'
        kaplan_structural:
          heading: 'Sample structural metadata fetched from Kaplan spreadsheet'
          field_separator: ':'
        pap:
          heading: 'Descriptive metadata fetched from Catalog Lookup'
          field_separator: ':'
        pap_structural:
          heading: 'Sample of structural metadata fetched from Catalog Lookup'
          field_separator: ':'
        custom:
          field:
            label: '"%{field}" should map to:'
            tip: 'Example values from source: %{example}'
        children:
          label: 'Child/children of %{parent}'
        filename_references:
          label: 'Filenames are referenced in:'
        structural_entry: 'Entry'
        previews:
          issue_detected: 'Issue detected with %{file_name}: '
      xml:
        review_tag: 'review_status'
    version_control_agents:
      commit_messages:
        commit_bare: 'Added subdirectories according to the configuration specified in the repo configuration'
        post_ingest_artifacts: 'Added post-ingest artifacts'
        write_input_source: 'Saved source in original format'
        catalog_derivative_spreadsheet: 'Created derivative spreadsheet of catalog metadata'
        generated_derivative: 'Generated derivative for %{file_name}'
        generated_thumbnail: 'Generated thumbnail for %{object_id}'
        generated_admin_metadata: 'Generated admin metadata'
        generated_preservation_metadata: 'Generated JHOVE XML for %{object_id}'
        jettison_metadata: 'Removed files not identified as metadata source and/or for long-term preservation'
        jettison_assets: 'Removed original asset files per metadata source type directive'
        write_preservation_xml: 'Generated unified XML'
        write_xlsx_from_csv: 'Generated XSLX from CSV'
        generated_previews: 'Generated previews'
        generated_thumbnail: 'Generated thumbnail'
        ingest_complete: 'Ingest complete'
        automated:
          added_metadata: 'Added metadata through automated workflow'
          added_assets: 'Added assets through automated workflow'
      readme_contents: '## README for %{unique_identifier}\n\nFor up-to-date information regarding the structure and contents of this git repository, visit the RST Confluence page'
      packaging_info: 'Source information for %{source_path}\npath: %{source_path}\nid (use to correlate children): %{source_id}\nsource_type: %{source_type}\nview_type: %{source_view_type}\nnum_objects: %{source_num_objects}\nx_start: %{source_x_start}\nx_stop: %{source_x_stop}\ny_start: %{source_y_start}\ny_stop: %{source_y_stop}\nchildren: %{source_children}\n\n'
    utils:
      warnings:
        no_files: 'No files detected'
      success:
        checksum_log_generated: 'Checksum log generated'
      metadata_source:
        errors:
         invalid_input_format: 'Invalid input format specified: %{input_format}'
      version_control:
        git_annex:
          errors:
            missing_directory: 'Directory %{directory} missing.'
            sync: 'Trying to perform git annex sync outside of an annexed repository.'
            leftover_clone: 'Leftover Git remote clone in working directory - %{directory}.'
            does_not_exist: 'Git remote does not exist.  Could not clone to perform tasks.'
            unlock_no_options: 'Unlock command cannot be used without specifying content.'
            no_changes: 'Nothing staged for commit.'
            generic: 'Error from Git: %{error_message}'
      preprocess:
        warnings:
          no_filesystem_manifest: 'WARNING: No filesystem manifest found at %{manifest_path}, skipping...'
          no_file_list: 'File list could not be generated, as the manifest has not been created.  Run `Utils::Preprocess.build_for_preprocessing(%{parent_directory})` or `Utils::Preprocess.get_filesystem_manifest_hash(%{parent_directory}/%{object_semantics_location}) before calling this method to resolve.`'
      process:
        warnings:
          missing_identifier: 'Object(s) missing identifier.  Please check metadata source.'
          invalid_curl_command: 'Invalid command type specified.  Command not built.'
          multiple_structural_files: 'Multiple structural entries with same filename.'
          object_method_missing: 'No %{method_name} method defined for this object.'
        success:
          ingest_complete: 'Ingestion complete.  See link(s) below to preview ingested items associated with this repo.'
    warnings:
      invalid_prettify_argument: 'Invalid argument %{argument}. prettify can only accept strings and arrays of strings.'
      out_of_sync:
        extraction: 'Metadata Source settings have been updated since the last extraction of metadata.  Please press the button below to extract metadata based on these new settings.'
        xml: 'Metadata has been extracted since the last time this XML was generated.  Please press the button below to generate XML with the most current metadata.'
      i_broke: 'Something went wrong. Please contact the site administrator.'
    errors:
      repos:
        tmp_dir: 'Repo tmp directory not properly deleted; may now be in git commit history'
        ingest_error: 'Ingest and index failed due to the following error(s): %{backtrace}'
      metadata_sources:
        illegal_view_type: 'Illegal view type %{view_type} for %{source}'
        illegal_source_type: 'Illegal source type %{source_type} for %{source}'
        illegal_source_type_generic: 'Illegal source unit type'
        conversion_error: 'Metadata conversion failed due to the following error(s): %{backtrace}'
    links:
      review_status: 'Update Review Status for this Object'
      new_tab: 'Opens in a new tab'
    image_pages:
      heading: 'Page Details'
